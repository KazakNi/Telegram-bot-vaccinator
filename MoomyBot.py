from cgitb import text
from dotenv import load_dotenv
from faq_base import faq, questions
from keyboards import (
    choice_button,
    markup_age_child,
    markup_age_infant,
    markup_category,
    ignore,
    ignore_vaccine,
    button_age,
    markup_menu,
    markup_vaccine,
    markup_exit,
    inline_markup,
    inline_markup_menu_faq
)
import logging
import os
import sys
from telegram.ext import (CallbackContext, CallbackQueryHandler,
                          CommandHandler, ConversationHandler, Filters,
                          MessageHandler,
                          Updater)
from telegram import ReplyKeyboardRemove, ParseMode, Sticker, Update
from utils import vaccine_schedule


load_dotenv()

mylogger = logging.getLogger("telegram_bot")

formatter = logging.Formatter('%(asctime)s, %(levelname)s, %(name)s,'
                              '%(message)s')
handler = logging.StreamHandler(stream=sys.stdout)
handler.setFormatter(formatter)
handler.setLevel(logging.DEBUG)
mylogger.addHandler(handler)
mylogger.setLevel(logging.DEBUG)

TOKEN = os.getenv('TOKEN')
CHAT_ID = os.getenv('CHAT_ID')
CHOOSING, AGE, VACCINE, FAQ = range(4)


def start(update: Update, context: CallbackContext):
    mylogger.info('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω')
    user = update.message.from_user
    update.message.reply_text(f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user['first_name']}! "
                              "–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ "
                              "–≤–∞–∫—Ü–∏–Ω–æ–ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, "
                              "–≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å. üòä",
                              reply_markup=markup_menu)
    return CHOOSING


def help(update: Update, context: CallbackContext):
    update.message.reply_text('–°–ø—Ä–∞–≤–∫–∞:\n–í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç –±–æ—Ç–∞ –Ω–æ—Å–∏—Ç '
                              '–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω—ã–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä –∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è '
                              '–≤—Ä–∞—á–µ–±–Ω—ã–º –ø—Ä–µ–¥–ø–∏—Å–∞–Ω–∏–µ–º, –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π '
                              '–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —Å –≤—Ä–∞—á–æ–º –í—ã –º–æ–∂–µ—Ç–µ '
                              '–≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è '
                              '–∫–Ω–æ–ø–∫–æ–π —Å–≤—è–∑–∏ –≤ –º–µ–Ω—é.\nV1 ‚Äî –ø–µ—Ä–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç '
                              '–≤–∞–∫—Ü–∏–Ω—ã\nV2 ‚Äî –≤—Ç–æ—Ä–æ–π\nV3 ‚Äî —Ç—Ä–µ—Ç–∏–π'
                              '\nRV1 ‚Äî –ø–µ—Ä–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ä–µ–≤–∞–∫—Ü–∏–Ω–∞—Ü–∏–∏.\nRV2 ‚Äî'
                              '–≤—Ç–æ—Ä–æ–π\nRV3 ‚Äî —Ç—Ä–µ—Ç–∏–π')
    return CHOOSING


def choice_action(update: Update, context: CallbackContext):
    if update.message.text.lower() in ['—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –ø—Ä–∏–≤–∏–≤–∫–∏',
                                       '—Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –∑–∞–Ω–æ–≤–æ']:
        update.message.reply_text("–£–∫–∞–∂–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ä–µ–±—ë–Ω–∫–∞",
                                  reply_markup=markup_category)
        return AGE
    elif update.message.text.lower() in ['—á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã']:
        update.message.reply_text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π '
                                  '–í–∞—Å –Ω–æ–º–µ—Ä –≤–æ–ø—Ä–æ—Å–∞:',
                                  reply_markup=inline_markup)
        return FAQ
    elif update.message.text.lower() in ['—Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤—Ä–∞—á–æ–º']:
        update.message.reply_text(text='<a href="https://vk.com/i.ulybayas">'
                                       '–õ—é–±–æ–≤—å –ö–∞–∑–∞–∫–æ–≤–∞</a>',
                                       parse_mode=ParseMode.HTML,
                                       reply_markup=markup_menu)
    elif update.message.text.lower() in ['–ø–æ–∫–∞–∑–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫']:
        try:
            update.message.reply_photo(photo=open('graph.png', 'rb'),
                                       reply_markup=markup_menu)
        except Exception as error:
            mylogger.critical(f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ {error}.')
            update.message.reply_text('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ñ–æ—Ç–æ –≥—Ä–∞—Ñ–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞'
                                      '–¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω'
                                      '–æ –ø—Ä–æ–±–ª–µ–º–µ.')
            context.bot.send_message(chat_id=CHAT_ID,
                                     text='–í–Ω–∏–º–∞–Ω–∏–µ! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–º–æ–≥'
                                          '–∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ –≥—Ä–∞—Ñ–∏–∫–∞.',
                                          reply_markup=markup_menu)
            return CHOOSING
    return CHOOSING


def clarify_question(update: Update, context: CallbackContext):
    update.message.reply_text('–ü—Ä–æ—Å—Ç–∏—Ç–µ, —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, '
                              '–≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –º–µ–Ω—é', reply_markup=markup_menu)
    mylogger.warning(f'–í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω: {update.message.text}')
    return CHOOSING


def age_category(update: Update, context: CallbackContext):
    '''–£—Ç–æ—á–Ω–µ–Ω–∏–µ –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø—Ä–∏–≤–∏–≤–æ–∫.'''
    context.user_data['age_dimension'] = update.message.text
    if update.message.text.lower() in '0-23 –º–µ—Å—è—Ü–∞':
        update.message.reply_text('–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç',
                                  reply_markup=markup_age_infant)
        return VACCINE
    elif update.message.text.lower() in '2-17 –ª–µ—Ç':
        update.message.reply_text('–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç',
                                  reply_markup=markup_age_child)
        return VACCINE
    elif update.message.text.lower() in '–≤ –º–µ–Ω—é':
        update.message.reply_text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π '
                                  '–í–∞—Å –≤–æ–ø—Ä–æ—Å',
                                  reply_markup=markup_menu)
        return CHOOSING
    else:
        update.message.reply_text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º–æ–≥–æ '
                                  '–¥–∏–∞–ø–∞–∑–æ–Ω–∞', reply_markup=markup_category)
        return AGE


def result(update: Update, context: CallbackContext):
    '''–§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—â–∞–µ—Ç—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –≤—ã–¥–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Å–ø–∏—Å–æ–∫ –≤–∞–∫—Ü–∏–Ω'''
    ''' –∫ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–º—É –≤–æ–∑—Ä–∞—Å—Ç—É.'''

    if update.message.text.lower() in '–≤ –º–µ–Ω—é':
        update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å",
                                  reply_markup=markup_menu)
        return CHOOSING
    import re
    regex = re.compile('^[0-9]')
    result = regex.match(update.message.text)
    age_dimension = context.user_data['age_dimension']
    if not result and age_dimension in '0-23 –º–µ—Å—è—Ü–∞':
        update.message.reply_text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –º–µ—Å—è—Ü–µ–≤',
                                  reply_markup=markup_age_infant)
        return VACCINE
    if not result and age_dimension in '2-17 –ª–µ—Ç':
        update.message.reply_text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –ª–µ—Ç',
                                  reply_markup=markup_age_child)
        return VACCINE
    elif age_dimension in '0-23 –º–µ—Å—è—Ü–∞' and int(update.message.text) > 24:
        update.message.reply_text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –¥–æ 2',
                                  reply_markup=markup_exit)
        return VACCINE
    elif age_dimension in '2-17 –ª–µ—Ç' and int(update.message.text) > 17:
        update.message.reply_text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –¥–æ 17'
                                  '–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ', reply_markup=markup_exit)
        return VACCINE
    context.user_data['age'] = update.message.text
    age = context.user_data['age']
    update.message.reply_text(f"{vaccine_schedule(age, age_dimension)}",
                              reply_markup=markup_vaccine,
                              parse_mode=ParseMode.HTML)
    return CHOOSING


def faq_answer(update: Update, context: CallbackContext):
    '''Callbackquery –ø–æ —Å–ª–æ–≤–∞—Ä—é –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç—ã –Ω–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã.'''

    query = update.callback_query
    if str(update.callback_query.data) in ('RESTART'):
        query.message.edit_text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å –Ω–æ–º–µ—Ä '
                                '–≤–æ–ø—Ä–æ—Å–∞:', reply_markup=inline_markup)
        return FAQ
    if str(update.callback_query.data) in ('MENU'):
        query.message.reply_text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å '
                                 '–≤–æ–ø—Ä–æ—Å:', reply_markup=markup_menu)
        return CHOOSING
    else:
        answer_num = query.data
        query.answer()
        query.edit_message_text(text=f'\n–í–æ–ø—Ä–æ—Å ‚Ññ'
                                     f'<b>{questions[int(answer_num)-1]}</b>\n'
                                     f'\n–û—Ç–≤–µ—Ç: {faq[answer_num]}',
                                reply_markup=inline_markup_menu_faq,
                                parse_mode=ParseMode.HTML)
        return FAQ


def cancel(update: Update, context: CallbackContext):
    """–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –±–µ—Å–µ–¥—ã, –æ—á–∏—Å—Ç–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã."""

    remove_keyboard = ReplyKeyboardRemove()
    query = update.callback_query
    if query:
        user = query.from_user
        query.message.reply_text(f'–î–æ —Å–≤–∏–¥–∞–Ω–∏—è, {user["first_name"]}, '
                                 '—Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è üòä!', 
                                 reply_markup=remove_keyboard)
    else:
        user = update.message.from_user
        update.message.reply_text(f'–î–æ —Å–≤–∏–¥–∞–Ω–∏—è, {user["first_name"]},'
                                  '—Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è! üòä',
                                  reply_markup=remove_keyboard)
    mylogger.info('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–≤–µ—Ä—à–∏–ª –±–µ—Å–µ–¥—É')
    return ConversationHandler.END


def secret_word(update: Update, context: CallbackContext):
    context.bot.send_message(chat_id=update.effective_message.chat_id,
                             text='–ß–∞—Ç-–±–æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –ö–∞–∑–∞–∫–æ–≤—ã–º –ù–∏–∫–∏—Ç–æ–π.\n'
                             '–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω –ü–∞—Ä—Ö–æ–º–µ–Ω–∫–æ –í–ª–∞–¥–æ–º, —Å–ø–∞—Å–∏–±–æ –µ–º—É :)')

    context.bot.send_sticker(chat_id=update.effective_message.chat_id,
                             sticker='https://cdn.tlgrm.app/stickers/a9a/146'
                             '/a9a1468d-6946-37c0-a1a6-13ed601a8685/192/1.webp'
                             )


handler = ConversationHandler(
        entry_points=[CommandHandler('start', start), 
                      MessageHandler(Filters.text('–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ'), start)],
        states={
            CHOOSING: [MessageHandler(Filters.text(choice_button),
                                      choice_action),
                       MessageHandler(Filters.regex(fr'[^{ignore}]'),
                                      clarify_question),
                       CallbackQueryHandler(choice_action,
                                            pattern='^[^MENU]')],
            AGE: [MessageHandler(Filters.text(button_age) |
                                 Filters.regex(r'\w'), age_category)],
            VACCINE: [MessageHandler(Filters.regex(r'\d'), result),
                      MessageHandler(Filters.regex(fr'[^{ignore_vaccine}]'),
                                     result)],
            FAQ: [
                CallbackQueryHandler(faq_answer, pattern='^[^STOP]'),
                CallbackQueryHandler(faq_answer, pattern='^' +
                                     str('RESTART') + '$'),
                MessageHandler(Filters.text(choice_button), choice_action),
                MessageHandler(Filters.regex(fr'[^{ignore}]'),
                               clarify_question)],
                },
        fallbacks=[MessageHandler(Filters.regex("–û—Ç–º–µ–Ω–∏—Ç—å"), cancel),
                   CallbackQueryHandler(cancel, pattern='^' + str('STOP')
                   + '$')], allow_reentry=True
      )


def main() -> None:
    """Start the bot."""
    updater = Updater(token=TOKEN)
    dispatcher = updater.dispatcher
    dispatcher.add_handler(MessageHandler(Filters.regex(r'^–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫'),
                                          secret_word))
    dispatcher.add_handler(handler)
    dispatcher.add_handler(CommandHandler("help", help))
    updater.start_polling()
    updater.idle()


if __name__ == '__main__':
    main()
